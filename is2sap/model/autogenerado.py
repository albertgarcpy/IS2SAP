#autogenerated by sqlautocode

from sqlalchemy import *
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relation
from is2sap.model import DeclarativeBase, metadata, DBSession

__all__ = ['Proyecto', 'Rol', 'Atributo', 'EstadoFase', 'Fase', 'HistorialItem', 
           'Item', 'ItemDetalle', 'LineaBase', 'Permiso', 'Relacion', 'TipoItem']

#engine = create_engine('postgres://postgres:hola@localhost/Prueba')
#DeclarativeBase = declarative_base()
#metadata = DeclarativeBase.metadata
#metadata.bind = engine

try:
    from sqlalchemy.dialects.postgresql import *
except ImportError:
    from sqlalchemy.databases.postgres import *




Item = Table(u'Item', metadata,
    Column(u'id_item', INTEGER(), primary_key=True, nullable=False),
    Column(u'id_tipo_item', INTEGER(), ForeignKey('Tipo_Item.id_tipo_item'), nullable=False),
    Column(u'id_linea_base', INTEGER(), ForeignKey('Linea_Base.id_linea_base')),
    Column(u'numero', INTEGER(), nullable=False),
    Column(u'descripcion', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
    Column(u'complejidad', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
    Column(u'prioridad', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
    Column(u'estado', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
    Column(u'archivo_externo', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False)),
    Column(u'version', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False),
    Column(u'observacion', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False)),
    Column(u'fecha_modificacion', DATE(), nullable=False),
    Column(u'vivo', BOOLEAN(create_constraint=True, name=None), nullable=False),
)


Rol_Permiso = Table(u'Rol_Permiso', metadata,
    Column(u'id_rol', INTEGER(), ForeignKey('Rol.id_rol'), primary_key=True, nullable=False),
    Column(u'id_permiso', INTEGER(), ForeignKey('Permiso.id_permiso'), primary_key=True, nullable=False),
)

Rol_Usuario = Table(u'Rol_Usuario', metadata,
    Column(u'id_rol', INTEGER(), ForeignKey('Rol.id_rol'), primary_key=True, nullable=False),
    Column(u'id_usuario', INTEGER(), ForeignKey('Usuario.id_usuario'), primary_key=True, nullable=False),
)

Usuario_Item = Table(u'Usuario_Item', metadata,
    Column(u'id_usuario', INTEGER(), ForeignKey('Usuario.id_usuario'), primary_key=True, nullable=False),
    Column(u'id_item', INTEGER(), ForeignKey('Item.id_item'), primary_key=True, nullable=False),
)



    #relation definitions








class HistorialItem(DeclarativeBase):
    __tablename__ = 'Historial_Item'

    #column definitions
    id_historial_item = Column(u'id_historial_item', INTEGER(), primary_key=True, nullable=False)
    id_item = Column(u'id_item', INTEGER(), ForeignKey('Item.id_item'), nullable=False)
    nombre_atributo = Column(u'nombre_atributo', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    valor = Column(u'valor', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    version = Column(u'version', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class Item(DeclarativeBase):
    __table__ = Item


    #relation definitions


class ItemDetalle(DeclarativeBase):
    __tablename__ = 'Item_Detalle'

    #column definitions
    id_item = Column(u'id_item', INTEGER(), ForeignKey('Item.id_item'), nullable=False)
    id_item_detalle = Column(u'id_item_detalle', INTEGER(), primary_key=True, nullable=False)
    nombre_atributo = Column(u'nombre_atributo', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    valor = Column(u'valor', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions


class LineaBase(DeclarativeBase):
    __tablename__ = 'Linea_Base'

    #column definitions
    descripcion = Column(u'descripcion', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    estado = Column(u'estado', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    id_fase = Column(u'id_fase', INTEGER(), ForeignKey('Fase.id_fase'), nullable=False)
    id_linea_base = Column(u'id_linea_base', INTEGER(), primary_key=True, nullable=False)
    version = Column(u'version', INTEGER(), nullable=False)

    #relation definitions


class Permiso(DeclarativeBase):
    __tablename__ = 'Permiso'

    #column definitions
    descripcion = Column(u'descripcion', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False))
    id_permiso = Column(u'id_permiso', INTEGER(), primary_key=True, nullable=False)
    nombre = Column(u'nombre', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)

    #relation definitions

class Relacion(DeclarativeBase):
    __tablename__ = 'Relacion'

    #column definitions
    estado = Column(u'estado', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    id_item1 = Column(u'id_item1', INTEGER(), nullable=False)
    id_item2 = Column(u'id_item2', INTEGER(), nullable=False)
    id_relacion = Column(u'id_relacion', INTEGER(), primary_key=True, nullable=False)
    tipo = Column(u'tipo', VARCHAR(length=None, convert_unicode=False, assert_unicode=None, unicode_error=None, _warn_on_bytestring=False), nullable=False)
    version = Column(u'version', INTEGER(), nullable=False)

    #relation definitions







